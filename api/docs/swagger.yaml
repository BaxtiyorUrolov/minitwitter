definitions:
  models.CreateUser:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
      user_name:
        type: string
    type: object
  models.LoginRequest:
    properties:
      login:
        type: string
      password:
        type: string
    type: object
  models.Response:
    properties:
      data: {}
      description:
        type: string
      statusCode:
        type: integer
    type: object
  models.UpdateUser:
    properties:
      bio:
        type: string
      email:
        type: string
      id:
        type: string
      name:
        type: string
      profile_picture:
        type: string
      user_name:
        type: string
    type: object
  models.User:
    properties:
      bio:
        type: string
      created_at:
        type: string
      deleted_at:
        type: integer
      email:
        type: string
      id:
        type: string
      name:
        type: string
      password:
        type: string
      profile_picture:
        type: string
      updated_at:
        type: string
      user_id:
        type: integer
      user_name:
        type: string
    type: object
  models.UsersResponse:
    properties:
      count:
        type: integer
      user_names:
        items:
          $ref: '#/definitions/models.User'
        type: array
    type: object
  models.VerifyCodeRequest:
    properties:
      code:
        type: string
      email:
        type: string
      password:
        type: string
      user_name:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/v1/login:
    post:
      consumes:
      - application/json
      description: Customer login
      parameters:
      - description: login
        in: body
        name: login
        schema:
          $ref: '#/definitions/models.LoginRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Customer login
      tags:
      - auth
  /api/v1/register:
    post:
      consumes:
      - application/json
      description: Register a new user
      parameters:
      - description: user
        in: body
        name: user
        schema:
          $ref: '#/definitions/models.CreateUser'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Register a new user
      tags:
      - register
  /api/v1/user:
    post:
      consumes:
      - application/json
      description: create a new user
      parameters:
      - description: user
        in: body
        name: user
        schema:
          $ref: '#/definitions/models.CreateUser'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Creates a new user
      tags:
      - user
  /api/v1/user/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiAuthKey: []
      summary: Delete a user
      tags:
      - user
    get:
      consumes:
      - application/json
      description: Get a user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Get a user by ID
      tags:
      - user
    put:
      consumes:
      - application/json
      description: Update a user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: user
        in: body
        name: user
        schema:
          $ref: '#/definitions/models.UpdateUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Update a user
      tags:
      - user
  /api/v1/users:
    get:
      consumes:
      - application/json
      description: Get list of users
      parameters:
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UsersResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Get list of users
      tags:
      - user
  /api/v1/verify-register:
    post:
      consumes:
      - application/json
      description: verify the SMS code sent to user
      parameters:
      - description: verification
        in: body
        name: verification
        schema:
          $ref: '#/definitions/models.VerifyCodeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Verifies the SMS code
      tags:
      - register
securityDefinitions:
  ApiAuthKey:
    description: API key needed to access the endpoints
    in: header
    name: X-API-Key
    type: apiKey
swagger: "2.0"
