version: '3.8'

services:
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: godb
      POSTGRES_PASSWORD: 0208
      POSTGRES_DB: twitter
    ports:
      - "5434:5432"
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U godb"]
      interval: 10s
      timeout: 5s
      retries: 5

  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - app-network

  kafka:
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_BROKER_ID: 1
    depends_on:
      - zookeeper
    networks:
      - app-network

  twitter-app:
    build: .
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: godb
      POSTGRES_PASSWORD: 0208
      POSTGRES_DB: twitter
      HTTP_PORT: ":7070"
      EMAIL_PASSWORD: eqweiomvpxikrujl
      KAFKA_HOST: kafka
      KAFKA_PORT: 9092
      KAFKA_TOPIC: send_notification
    ports:
      - "7070:7070"
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_started
    restart: always
    networks:
      - app-network
    volumes:
      - ./.env:/app/.env            # .env faylini konteynerga ulash
      - ./migrations:/app/migrations

networks:
  app-network:
    driver: bridge
